#
# Download postgresql Source code,compile code, Install binaries 
#
# ######################################################################
# Documentation
https://pgpedia.info/postgresql-versions/postgresql-16.html
prepare: https://wiki.postgresql.org/wiki/Compile_and_Install_from_source_code
source : https://github.com/postgres/postgres.git pgsql
build  : https://www.postgresql.org/docs/current/installation.html

# ######################################################################
# VirtualBox VM
cd ~/Vagrant/postgre16
vagrant up
vagrant ssh

# OS Software
sudo su - 
timedatectl set-timezone 'America/New_York'
yum update -y
yum install -y bison-devel readline-devel zlib-devel openssl-devel wget ccache
yum groupinstall -y 'Development Tools'

#sudo su -
adduser postgres
#mkdir -p /usr/local/pgsql
#chown postgres:postgres /usr/local/pgsql

# Download
sudo su - postgres
echo '
export PGCODE=$HOME/code
export PGDATA=$HOME/data
export PGSOFT=$HOME/pgsql
export PGBIN=$PGSOFT/bin
export PATH=$PATH:$PGBIN
set -o vi
' >> ~/.bash_profile

cd $HOME
rm -rf $PGCODE
git clone https://github.com/postgres/postgres.git 
find $PGCODE -print -exec touch -t 202301010000 {} \;


#Customize
vi configure.ac
modify AC_INIT line with following
AC_INIT([RaogaruDB], [16.0], [rao@raogarudb.io], [], [https://www.raogarudb.io/])

# run autoconf to create configure script
autoconf

# Compile
sudo su - postgres
cd $PGCODE
./configure --prefix=$PGSOFT --without-icu -q
#./configure --prefix=$PGSOFT -q
# ./configure --prefix=$PGSOFT --enable-debug CFLAGS="-DOPTIMIZER_DEBUG"
# ./configure --prefix=$PGSOFT --enable-debug CFLAGS="-O0"
make -s clean
make -s
make -s check
make -s install
mkdir -p $PGDATA
chown postgres:postgres $PGDATA

# DB
su - postgres
$PGBIN/initdb -D $PGDATA
$PGBIN/pg_ctl -D $PGDATA start -l $HOME/logs/postgres.log
$PGBIN/pg_ctl -D $PGDATA stop

select * from pg_tables where schemaname='public';

# ######################################################################

Local Changes:

./src/bin/psql/help.c
function: helpSQL
change: Search for "Command:" Add #'s top and bottom for command help fprintf

./src/bin/psql/describe.c
functions: all functions starting with describe
change: Add RAOGARU to variable named myopt.title

./src/bin/psql/mainloop.c
function: MainLoop
change: 3 times: Look for SendQuery and printf string that is going as arg to SendQuery

./src/interfaces/libpq/fe-print.c
function:  PQprint
change: customize (N rows) result

./src/bin/psql/common.c
function: PrintQueryStatus
--print in color
fprintf(fout, "\033[0,32m%s\033[0,0m\n", PQcmdStatus(result));
 
 
# ######################################################################
# EXTENTIONS part of CODE

yum install cmake -y

# ----------------------------------------
# pg_stat_statements - WORKING 

sudo su - postgres
cd $PGCODE/contrib/pg_stat_statements
make 
make install

psql
CREATE EXTENSION pg_stat_statements;
alter system set shared_preload_libraries = 'pg_stat_statements';
alter system set track_activity_query_size=2048;
alter system set pg_stat_statements.track = all;
alter system set compute_query_id = on;
alter system set pg_stat_statements.max = 10000;

#restart postgresql
$PGBIN/pg_ctl -D $PGDATA stop
$PGBIN/pg_ctl -D $PGDATA start -l $HOME/logs/postgres.log


# test after benchmarking 
pgbench -i
pgbench -c10 -t300

psql
\d pg_stat_statements
select * from pg_stat_statements;
\x 
SELECT query, calls, total_exec_time, rows, 100.0 * shared_blks_hit /
nullif(shared_blks_hit + shared_blks_read, 0) AS hit_percent
FROM pg_stat_statements ORDER BY total_exec_time DESC LIMIT 5;

How to use?
Refer to $PGCODE/contrib/pg_stat_statements/sql/*.sql


# ----------------------------------------
# EXTENSION: pg_buffercache - WORKING 
PROJECT_URL	comes with code
GIT_REPO	same as postgres16 code

sudo su - postgres
cd $PGCODE/contrib/pg_buffercache

make 
make install

psql
CREATE EXTENSION pg_buffercache ;
\d pg_buffercache

# test during benchmarking 
pgbench -i
pgbench -c10 -t300

psql

SELECT c.relname, count(*) AS buffers
FROM pg_buffercache b INNER JOIN pg_class c 
ON b.relfilenode = pg_relation_filenode(c.oid) AND
b.reldatabase IN (0, (SELECT oid FROM pg_database
WHERE datname = current_database()))
GROUP BY c.relname
ORDER BY 2 DESC
LIMIT 10;

\watch

How to use?
Refer to $PGCODE/contrib/pg_buffercache/sql/pg_buffercache.sql

# ----------------------------------------
# EXTENSION: pg_freespacemap - WORKING 
PROJECT_URL	comes with code
GIT_REPO	same as postgres16 code

sudo su - postgres
cd $PGCODE/contrib/pg_freespacemap 
make 
make install

psql
CREATE EXTENSION pg_freespacemap ;

# info available from overloaded function pg_freespace
psql
SELECT * FROM pg_freespace('table1');
SELECT * FROM pg_freespace('table2', 7);

How to use?
Refer to $PGCODE/contrib/pg_freespacemap/sql/pg_freespacemap.sql

# ----------------------------------------
# pgstattuple - WORKING 
PROJECT_URL	comes with code
GIT_REPO	same as postgres16 code

sudo su - postgres
cd $PGCODE/contrib/pgstattuple 
make 
make install

psql
CREATE EXTENSION pgstattuple ;
SELECT * FROM pgstattuple('pg_catalog.pg_proc');

How to use?
refer to $PGCODE/contrib/pgstattuple/sql/pgstattuple.sql
# ----------------------------------------
# pg_walinspect - WORKING 
PROJECT_URL	comes with code
GIT_REPO	same as postgres16 code

sudo su - postgres
cd $PGCODE/contrib/pg_walinspect 
make 
make install

psql
CREATE EXTENSION pg_walinspect ;

How to use?
refer to $PGCODE/contrib/pg_walinspect/sql/pg_walinspect.sql

Notes
following can be used to dump wal log contents
$PGDATA/bin/pg_waldump $PGDATA/pg_wal/<pg-wal-file>

# ----------------------------------------
# EXTENSION: pgaudit - WORKING
PROJECT_URL	
GITHUB_REPO	https://github.com/pgaudit/pgaudit.git 
sudo su - postgres
cd $PGCODE/contrib
git clone https://github.com/pgaudit/pgaudit.git -b dev-pg16-ci 
cd pgaudit
make
make install

vi $PGDATA/postgresql.auto.conf
shared_preload_libraries='pgaudit'

#restart DB
$PGBIN/pg_ctl -D $PGDATA stop
$PGBIN/pg_ctl -D $PGDATA start -l $HOME/logs/postgres.log

psql
create extension pgaudit; 
alter system set pgaudit.log='all';
alter system set pgaudit.role='postgres';
alter system set pgaudit.log_statement='true';

#restart DB
$PGBIN/pg_ctl -D $PGDATA stop
$PGBIN/pg_ctl -D $PGDATA start -l $HOME/logs/postgres.log

# test
tail -f $HOME/logs/postgres.log
psql

create table t1(i integer);
drop table t1;

# ----------------------------------------
# postgres_fdw - WORKING 
PROJECT_URL	comes with code
GIT_REPO	same as postgres16 code

sudo su - postgres
cd $PGCODE/contrib/postgres_fdw 
make 
make install

psql
CREATE EXTENSION postgres_fdw ;

How to use?
refer to $PGCODE/contrib/postgres_fdw/sql/postgres_fdw.sql

# ----------------------------------------
# EXTENSION: pg_top
PROJECT_URL	https://pg_top.gitlab.io/
GIT_REPO	https://github.com/markwkm/pg_top.git
sudo su - postgres
cd $PGCODE/src/bin
git clone https://github.com/markwkm/pg_top.git
cd $PGCODE/src/bin/pg_top
SELECT * FROM pgstattuple('pg_catalog.pg_proc');cmake CMakeLists.txt -DCMAKE_INSTALL_PREFIX=$HOME/pgsq

# add 
shared_preload_libraries = 'pg_stat_statements'
track_activity_query_size=2048
pg_stat_statements.track = all
# ----------------------------------------
# EXTENSION: pg_systat
sudo su - postgres
cd $PGCODE/src/bin
git clone https://github.com/pg-systat/pg_systat.git
find pg_systat -print -exec touch -t 202301010000 {} \;
cd pg_systat
make
cp pg_systat.so `pg_config --pkglibdir`

psql
create extension pg_systat; 


# ----------------------------------------
# EXTENSION: pg_proctab
PROJECT_URL	https://gitlab.com/pg_proctab/pg_proctab
GITHUB_REPO	https://github.com/markwkm/pg_proctab.git

sudo su - postgres
cd $PGCODE/src/bin
git clone https://github.com/markwkm/pg_proctab.git


# ----------------------------------------
# EXTENSION: plProfiler
PROJECT_URL	
GITHUB_REPO	https://github.com/bigsql/plprofiler.git

sudo su - postgres
cd $PGCODE/src/bin
git clone https://github.com/bigsql/plprofiler.git

# ######################################################################
# writing new PostgreSQL extensions
https://www.percona.com/blog/writing-postgresql-extensions-is-fun-c-language/


